[2022-05-31T08:55:25Z TRACE counterlib] init_stuff() trace level message
[2022-05-31T08:55:25Z DEBUG counterlib] init_stuff() debug level message
[2022-05-31T08:55:25Z INFO  counterlib] init_stuff() info level message
[2022-05-31T08:55:25Z WARN  counterlib] init_stuff() warn level message
[2022-05-31T08:55:25Z ERROR counterlib] init_stuff() error level message
Hello Counter Station!
[2022-05-31T08:55:25Z INFO  counterlib] init
  0.000 (0.000): Prover::writeInput> size: 4
  0.000 (0.000):   write_word: 0x00000000
  0.000 (0.000): image.size() = 3145
  0.000 (0.000): numSteps = 4096
  0.000 (0.000): Prover::onInit>
  0.000 (0.000):   0x00180000: 0x00000000
  0.008 (0.007): EXPANDING!
  0.013 (0.004): MemoryHandler::onWrite> GPIO_SHA
  0.013 (0.000): SHA256 type: 0, count: 1, idx: 0, source: 0x00080000, digest: 0x00080040
  0.013 (0.000): Input[0x00]: 0x00080000 -> 0x00000000
  0.013 (0.000): Input[0x01]: 0x00080004 -> 0x80000000
  0.013 (0.000): Input[0x02]: 0x00080008 -> 0x00000000
  0.013 (0.000): Input[0x03]: 0x0008000c -> 0x00000000
  0.013 (0.000): Input[0x04]: 0x00080010 -> 0x00000000
  0.013 (0.000): Input[0x05]: 0x00080014 -> 0x00000000
  0.013 (0.000): Input[0x06]: 0x00080018 -> 0x00000000
  0.013 (0.000): Input[0x07]: 0x0008001c -> 0x00000000
  0.013 (0.000): Input[0x08]: 0x00080020 -> 0x00000000
  0.013 (0.000): Input[0x09]: 0x00080024 -> 0x00000000
  0.013 (0.000): Input[0x0a]: 0x00080028 -> 0x00000000
  0.013 (0.000): Input[0x0b]: 0x0008002c -> 0x00000000
  0.013 (0.000): Input[0x0c]: 0x00080030 -> 0x00000000
  0.013 (0.000): Input[0x0d]: 0x00080034 -> 0x00000000
  0.013 (0.000): Input[0x0e]: 0x00080038 -> 0x00000000
  0.013 (0.000): Input[0x0f]: 0x0008003c -> 0x00000020
  0.013 (0.000): Compress
  0.013 (0.000): Output[0x0]: 0xdf3f6198
  0.013 (0.000): Output[0x1]: 0x04a92fdb
  0.013 (0.000): Output[0x2]: 0x4057192d
  0.013 (0.000): Output[0x3]: 0xc43dd748
  0.013 (0.000): Output[0x4]: 0xea778adc
  0.013 (0.000): Output[0x5]: 0x52bc498c
  0.013 (0.000): Output[0x6]: 0xe80524c0
  0.013 (0.000): Output[0x7]: 0x14b81119
  0.019 (0.006): MemoryHandler::onWrite> GPIO_Write
  0.019 (0.000): IoHandler::onWrite> 32
  0.020 (0.000): MemoryHandler::onWrite> GPIO_Commit
  0.020 (0.000): IoHandler::onCommit> 32
  0.025 (0.005): size = 8192
  0.046 (0.020): Opening CPU
  0.180 (0.134): codeGroup: 038fce355f8714fb6f26bcf73abf1f3730bf9aba8b982b9ca099c19427d19a6a
  0.180 (0.000): dataGroup: 030d5fa325e63134ddd343ad40e413a9b08e6cf05cac69276b55a4a648b24abc
  0.180 (0.000): size = 8192
  0.180 (0.000): accum_.size() == 81920
  0.184 (0.004): size = 8192, accumSize = 10
  0.184 (0.000): getAccum.size() = 81920
  0.199 (0.015): accumGroup: cccb081d2eb67d80f7fcbcc44b00800c8a6b06e9e44c161a60c58c41efb69494
  1.139 (0.939): checkGroup: a244de6a3bfc46a9ae0030e056bb6ea0168d13eaec272cc99ff7db76ada6aecf
  1.139 (0.000): Z = 638376287+1310338477x+1389968802x^2+245789054x^3
  1.219 (0.080): Size of U = 756
  1.219 (0.000): Mix = 80830397+330267188x+1123690605x^2+552293816x^3
  1.255 (0.035): FRI-proof, size = 8192
  1.255 (0.000): Doing FRI folding
  1.259 (0.004): Doing FRI folding
  1.260 (0.000): Doing Queries
  1.261 (0.000): Proof size = 40398
  1.263 (0.002): Reading code id from circuit/init.id
  1.263 (0.000): size = 8192
  1.263 (0.000): codeRoot = 038fce355f8714fb6f26bcf73abf1f3730bf9aba8b982b9ca099c19427d19a6a
  1.263 (0.000): dataRoot = 030d5fa325e63134ddd343ad40e413a9b08e6cf05cac69276b55a4a648b24abc
  1.263 (0.000): accumRoot = cccb081d2eb67d80f7fcbcc44b00800c8a6b06e9e44c161a60c58c41efb69494
  1.263 (0.000): checkRoot = a244de6a3bfc46a9ae0030e056bb6ea0168d13eaec272cc99ff7db76ada6aecf
  1.263 (0.000): Z = 638376287+1310338477x+1389968802x^2+245789054x^3
  1.265 (0.001): Result = 1456987448+1272040507x+212726277x^2+1176768229x^3
  1.265 (0.000): Check = 1456987448+1272040507x+212726277x^2+1176768229x^3
  1.265 (0.000): mix = 80830397+330267188x+1123690605x^2+552293816x^3
  1.265 (0.000): FRI-verify, size = 8192
  1.271 (0.005): Reading code id from circuit/init.id
  1.271 (0.000): size = 8192
  1.271 (0.000): codeRoot = 038fce355f8714fb6f26bcf73abf1f3730bf9aba8b982b9ca099c19427d19a6a
  1.271 (0.000): dataRoot = 030d5fa325e63134ddd343ad40e413a9b08e6cf05cac69276b55a4a648b24abc
  1.271 (0.000): accumRoot = cccb081d2eb67d80f7fcbcc44b00800c8a6b06e9e44c161a60c58c41efb69494
  1.271 (0.000): checkRoot = a244de6a3bfc46a9ae0030e056bb6ea0168d13eaec272cc99ff7db76ada6aecf
  1.271 (0.000): Z = 638376287+1310338477x+1389968802x^2+245789054x^3
  1.272 (0.001): Result = 1456987448+1272040507x+212726277x^2+1176768229x^3
  1.272 (0.000): Check = 1456987448+1272040507x+212726277x^2+1176768229x^3
  1.272 (0.000): mix = 80830397+330267188x+1123690605x^2+552293816x^3
  1.272 (0.000): FRI-verify, size = 8192
Init State: {"state":[3745472920,78196699,1079449901,3292387144,3933702876,1388071308,3892651200,347607321]}
[2022-05-31T08:55:26Z INFO  counterlib] submit, increase the counter by 1
  1.277 (0.005): Prover::writeInput> size: 4
  1.277 (0.000):   write_word: 0x00000000
  1.278 (0.000): image.size() = 3377
  1.278 (0.000): numSteps = 4096
  1.278 (0.000): Prover::onInit>
  1.278 (0.000):   0x00180000: 0x00000000
  1.290 (0.011): MemoryHandler::onWrite> GPIO_Write
  1.290 (0.000): IoHandler::onWrite> 4
  1.290 (0.000): EXPANDING!
  1.300 (0.010): MemoryHandler::onWrite> GPIO_SHA
  1.300 (0.000): SHA256 type: 0, count: 1, idx: 0, source: 0x00080000, digest: 0x00080040
  1.300 (0.000): Input[0x00]: 0x00080000 -> 0x00000000
  1.300 (0.000): Input[0x01]: 0x00080004 -> 0x80000000
  1.300 (0.000): Input[0x02]: 0x00080008 -> 0x00000000
  1.300 (0.000): Input[0x03]: 0x0008000c -> 0x00000000
  1.300 (0.000): Input[0x04]: 0x00080010 -> 0x00000000
  1.300 (0.000): Input[0x05]: 0x00080014 -> 0x00000000
  1.300 (0.000): Input[0x06]: 0x00080018 -> 0x00000000
  1.300 (0.000): Input[0x07]: 0x0008001c -> 0x00000000
  1.300 (0.000): Input[0x08]: 0x00080020 -> 0x00000000
  1.300 (0.000): Input[0x09]: 0x00080024 -> 0x00000000
  1.300 (0.000): Input[0x0a]: 0x00080028 -> 0x00000000
  1.300 (0.000): Input[0x0b]: 0x0008002c -> 0x00000000
  1.300 (0.000): Input[0x0c]: 0x00080030 -> 0x00000000
  1.300 (0.000): Input[0x0d]: 0x00080034 -> 0x00000000
  1.300 (0.000): Input[0x0e]: 0x00080038 -> 0x00000000
  1.300 (0.000): Input[0x0f]: 0x0008003c -> 0x00000020
  1.300 (0.000): Compress
  1.300 (0.000): Output[0x0]: 0xdf3f6198
  1.300 (0.000): Output[0x1]: 0x04a92fdb
  1.300 (0.000): Output[0x2]: 0x4057192d
  1.300 (0.000): Output[0x3]: 0xc43dd748
  1.300 (0.000): Output[0x4]: 0xea778adc
  1.300 (0.000): Output[0x5]: 0x52bc498c
  1.300 (0.000): Output[0x6]: 0xe80524c0
  1.300 (0.000): Output[0x7]: 0x14b81119
  1.309 (0.008): MemoryHandler::onWrite> GPIO_SHA
  1.309 (0.000): SHA256 type: 0, count: 1, idx: 0, source: 0x00080060, digest: 0x000800a0
  1.309 (0.000): Input[0x00]: 0x00080060 -> 0x01000000
  1.309 (0.000): Input[0x01]: 0x00080064 -> 0x80000000
  1.309 (0.000): Input[0x02]: 0x00080068 -> 0x00000000
  1.309 (0.000): Input[0x03]: 0x0008006c -> 0x00000000
  1.309 (0.000): Input[0x04]: 0x00080070 -> 0x00000000
  1.309 (0.000): Input[0x05]: 0x00080074 -> 0x00000000
  1.309 (0.000): Input[0x06]: 0x00080078 -> 0x00000000
  1.309 (0.000): Input[0x07]: 0x0008007c -> 0x00000000
  1.309 (0.000): Input[0x08]: 0x00080080 -> 0x00000000
  1.309 (0.000): Input[0x09]: 0x00080084 -> 0x00000000
  1.309 (0.000): Input[0x0a]: 0x00080088 -> 0x00000000
  1.309 (0.000): Input[0x0b]: 0x0008008c -> 0x00000000
  1.309 (0.000): Input[0x0c]: 0x00080090 -> 0x00000000
  1.309 (0.000): Input[0x0d]: 0x00080094 -> 0x00000000
  1.309 (0.000): Input[0x0e]: 0x00080098 -> 0x00000000
  1.309 (0.000): Input[0x0f]: 0x0008009c -> 0x00000020
  1.309 (0.000): Compress
  1.309 (0.000): Output[0x0]: 0x67abdd72
  1.309 (0.000): Output[0x1]: 0x1024f0ff
  1.309 (0.000): Output[0x2]: 0x4e0b3f4c
  1.309 (0.000): Output[0x3]: 0x2fc13bc5
  1.309 (0.000): Output[0x4]: 0xbad42d0b
  1.309 (0.000): Output[0x5]: 0x7851d456
  1.309 (0.000): Output[0x6]: 0xd88d203d
  1.309 (0.000): Output[0x7]: 0x15aaa450
  1.321 (0.011): MemoryHandler::onWrite> GPIO_Write
  1.321 (0.000): IoHandler::onWrite> 64
  1.322 (0.000): MemoryHandler::onWrite> GPIO_Commit
  1.322 (0.000): IoHandler::onCommit> 64
  1.325 (0.003): MemoryHandler::onWrite> GPIO_SHA
  1.325 (0.000): SHA256 type: 0, count: 2, idx: 0, source: 0x00380000, digest: 0x00040038
  1.325 (0.000): Input[0x00]: 0x00380000 -> 0x98613fdf
  1.325 (0.000): Input[0x01]: 0x00380004 -> 0xdb2fa904
  1.325 (0.000): Input[0x02]: 0x00380008 -> 0x2d195740
  1.325 (0.000): Input[0x03]: 0x0038000c -> 0x48d73dc4
  1.325 (0.000): Input[0x04]: 0x00380010 -> 0xdc8a77ea
  1.325 (0.000): Input[0x05]: 0x00380014 -> 0x8c49bc52
  1.325 (0.000): Input[0x06]: 0x00380018 -> 0xc02405e8
  1.325 (0.000): Input[0x07]: 0x0038001c -> 0x1911b814
  1.325 (0.000): Input[0x08]: 0x00380020 -> 0x72ddab67
  1.325 (0.000): Input[0x09]: 0x00380024 -> 0xfff02410
  1.325 (0.000): Input[0x0a]: 0x00380028 -> 0x4c3f0b4e
  1.325 (0.000): Input[0x0b]: 0x0038002c -> 0xc53bc12f
  1.325 (0.000): Input[0x0c]: 0x00380030 -> 0x0b2dd4ba
  1.325 (0.000): Input[0x0d]: 0x00380034 -> 0x56d45178
  1.325 (0.000): Input[0x0e]: 0x00380038 -> 0x3d208dd8
  1.325 (0.000): Input[0x0f]: 0x0038003c -> 0x50a4aa15
  1.325 (0.000): Compress
  1.325 (0.000): Input[0x00]: 0x00380040 -> 0x80000000
  1.325 (0.000): Input[0x01]: 0x00380044 -> 0x00000000
  1.325 (0.000): Input[0x02]: 0x00380048 -> 0x00000000
  1.325 (0.000): Input[0x03]: 0x0038004c -> 0x00000000
  1.325 (0.000): Input[0x04]: 0x00380050 -> 0x00000000
  1.325 (0.000): Input[0x05]: 0x00380054 -> 0x00000000
  1.325 (0.000): Input[0x06]: 0x00380058 -> 0x00000000
  1.325 (0.000): Input[0x07]: 0x0038005c -> 0x00000000
  1.325 (0.000): Input[0x08]: 0x00380060 -> 0x00000000
  1.325 (0.000): Input[0x09]: 0x00380064 -> 0x00000000
  1.325 (0.000): Input[0x0a]: 0x00380068 -> 0x00000000
  1.325 (0.000): Input[0x0b]: 0x0038006c -> 0x00000000
  1.325 (0.000): Input[0x0c]: 0x00380070 -> 0x00000000
  1.325 (0.000): Input[0x0d]: 0x00380074 -> 0x00000000
  1.325 (0.000): Input[0x0e]: 0x00380078 -> 0x00000000
  1.325 (0.000): Input[0x0f]: 0x0038007c -> 0x00000200
  1.325 (0.000): Compress
  1.325 (0.000): Output[0x0]: 0x1ddebaa0
  1.325 (0.000): Output[0x1]: 0xa094fed0
  1.325 (0.000): Output[0x2]: 0x5e90228b
  1.325 (0.000): Output[0x3]: 0x03bb7d29
  1.325 (0.000): Output[0x4]: 0xc85cda46
  1.325 (0.000): Output[0x5]: 0x9418b908
  1.325 (0.000): Output[0x6]: 0x30617d60
  1.325 (0.000): Output[0x7]: 0xdaaf869c
  1.329 (0.003): size = 8192
  1.501 (0.172): codeGroup: fc7eaa147be8f6675a4ac4a1ea7dd046864574f91d44c32786553937453a31df
  1.501 (0.000): dataGroup: a6c27be9d612b5c2052dc0d366468e7da6aac30219c48ca463758ce44ecd8486
  1.501 (0.000): size = 8192
  1.501 (0.000): accum_.size() == 81920
  1.505 (0.003): size = 8192, accumSize = 10
  1.505 (0.000): getAccum.size() = 81920
  1.522 (0.017): accumGroup: 4c6d40ce3aee508b3218ee4eb3204e882212d08ee740f25879ef70cbbb7d0ef0
  2.465 (0.942): checkGroup: 752ba286c1d0cf68661462d07f600b91b19fc4fde05a8c695dba398e9e39241c
  2.465 (0.000): Z = 1381264305+1226256679x+702809997x^2+1038276949x^3
  2.548 (0.083): Size of U = 756
  2.548 (0.000): Mix = 1307919378+1532981940x+369219781x^2+1527377781x^3
  2.583 (0.034): FRI-proof, size = 8192
  2.583 (0.000): Doing FRI folding
  2.586 (0.003): Doing FRI folding
  2.587 (0.000): Doing Queries
  2.587 (0.000): Proof size = 40398
  2.587 (0.000): Reading code id from circuit/submit.id
  2.587 (0.000): size = 8192
  2.587 (0.000): codeRoot = fc7eaa147be8f6675a4ac4a1ea7dd046864574f91d44c32786553937453a31df
  2.587 (0.000): dataRoot = a6c27be9d612b5c2052dc0d366468e7da6aac30219c48ca463758ce44ecd8486
  2.587 (0.000): accumRoot = 4c6d40ce3aee508b3218ee4eb3204e882212d08ee740f25879ef70cbbb7d0ef0
  2.587 (0.000): checkRoot = 752ba286c1d0cf68661462d07f600b91b19fc4fde05a8c695dba398e9e39241c
  2.587 (0.000): Z = 1381264305+1226256679x+702809997x^2+1038276949x^3
  2.588 (0.000): Result = 726697568+1624083136x+1592817284x^2+310310658x^3
  2.588 (0.000): Check = 726697568+1624083136x+1592817284x^2+310310658x^3
  2.588 (0.000): mix = 1307919378+1532981940x+369219781x^2+1527377781x^3
  2.588 (0.000): FRI-verify, size = 8192
[2022-05-31T08:55:27Z INFO  counterlib] submit, increase the counter by 1
  2.595 (0.006): Prover::writeInput> size: 4
  2.595 (0.000):   write_word: 0x00000001
  2.595 (0.000): image.size() = 3377
  2.595 (0.000): numSteps = 4096
  2.595 (0.000): Prover::onInit>
  2.595 (0.000):   0x00180000: 0x00000001
  2.604 (0.008): MemoryHandler::onWrite> GPIO_Write
  2.604 (0.000): IoHandler::onWrite> 4
  2.604 (0.000): EXPANDING!
  2.613 (0.009): MemoryHandler::onWrite> GPIO_SHA
  2.613 (0.000): SHA256 type: 0, count: 1, idx: 0, source: 0x00080000, digest: 0x00080040
  2.613 (0.000): Input[0x00]: 0x00080000 -> 0x01000000
  2.613 (0.000): Input[0x01]: 0x00080004 -> 0x80000000
  2.613 (0.000): Input[0x02]: 0x00080008 -> 0x00000000
  2.613 (0.000): Input[0x03]: 0x0008000c -> 0x00000000
  2.613 (0.000): Input[0x04]: 0x00080010 -> 0x00000000
  2.613 (0.000): Input[0x05]: 0x00080014 -> 0x00000000
  2.613 (0.000): Input[0x06]: 0x00080018 -> 0x00000000
  2.613 (0.000): Input[0x07]: 0x0008001c -> 0x00000000
  2.613 (0.000): Input[0x08]: 0x00080020 -> 0x00000000
  2.613 (0.000): Input[0x09]: 0x00080024 -> 0x00000000
  2.613 (0.000): Input[0x0a]: 0x00080028 -> 0x00000000
  2.613 (0.000): Input[0x0b]: 0x0008002c -> 0x00000000
  2.613 (0.000): Input[0x0c]: 0x00080030 -> 0x00000000
  2.613 (0.000): Input[0x0d]: 0x00080034 -> 0x00000000
  2.613 (0.000): Input[0x0e]: 0x00080038 -> 0x00000000
  2.613 (0.000): Input[0x0f]: 0x0008003c -> 0x00000020
  2.613 (0.000): Compress
  2.613 (0.000): Output[0x0]: 0x67abdd72
  2.613 (0.000): Output[0x1]: 0x1024f0ff
  2.613 (0.000): Output[0x2]: 0x4e0b3f4c
  2.613 (0.000): Output[0x3]: 0x2fc13bc5
  2.613 (0.000): Output[0x4]: 0xbad42d0b
  2.613 (0.000): Output[0x5]: 0x7851d456
  2.613 (0.000): Output[0x6]: 0xd88d203d
  2.613 (0.000): Output[0x7]: 0x15aaa450
  2.621 (0.007): MemoryHandler::onWrite> GPIO_SHA
  2.621 (0.000): SHA256 type: 0, count: 1, idx: 0, source: 0x00080060, digest: 0x000800a0
  2.621 (0.000): Input[0x00]: 0x00080060 -> 0x02000000
  2.621 (0.000): Input[0x01]: 0x00080064 -> 0x80000000
  2.621 (0.000): Input[0x02]: 0x00080068 -> 0x00000000
  2.621 (0.000): Input[0x03]: 0x0008006c -> 0x00000000
  2.621 (0.000): Input[0x04]: 0x00080070 -> 0x00000000
  2.621 (0.000): Input[0x05]: 0x00080074 -> 0x00000000
  2.621 (0.000): Input[0x06]: 0x00080078 -> 0x00000000
  2.621 (0.000): Input[0x07]: 0x0008007c -> 0x00000000
  2.621 (0.000): Input[0x08]: 0x00080080 -> 0x00000000
  2.621 (0.000): Input[0x09]: 0x00080084 -> 0x00000000
  2.621 (0.000): Input[0x0a]: 0x00080088 -> 0x00000000
  2.621 (0.000): Input[0x0b]: 0x0008008c -> 0x00000000
  2.621 (0.000): Input[0x0c]: 0x00080090 -> 0x00000000
  2.621 (0.000): Input[0x0d]: 0x00080094 -> 0x00000000
  2.621 (0.000): Input[0x0e]: 0x00080098 -> 0x00000000
  2.621 (0.000): Input[0x0f]: 0x0008009c -> 0x00000020
  2.621 (0.000): Compress
  2.621 (0.000): Output[0x0]: 0x26b25d45
  2.621 (0.000): Output[0x1]: 0x7597a7b0
  2.621 (0.000): Output[0x2]: 0x463f9620
  2.621 (0.000): Output[0x3]: 0xf666dd10
  2.621 (0.000): Output[0x4]: 0xaa2c4373
  2.621 (0.000): Output[0x5]: 0xa505967c
  2.621 (0.000): Output[0x6]: 0x7c8d7092
  2.621 (0.000): Output[0x7]: 0x2a2d6ece
  2.632 (0.010): MemoryHandler::onWrite> GPIO_Write
  2.632 (0.000): IoHandler::onWrite> 64
  2.633 (0.000): MemoryHandler::onWrite> GPIO_Commit
  2.633 (0.000): IoHandler::onCommit> 64
  2.636 (0.003): MemoryHandler::onWrite> GPIO_SHA
  2.637 (0.000): SHA256 type: 0, count: 2, idx: 0, source: 0x00380000, digest: 0x00040038
  2.637 (0.000): Input[0x00]: 0x00380000 -> 0x72ddab67
  2.637 (0.000): Input[0x01]: 0x00380004 -> 0xfff02410
  2.637 (0.000): Input[0x02]: 0x00380008 -> 0x4c3f0b4e
  2.637 (0.000): Input[0x03]: 0x0038000c -> 0xc53bc12f
  2.637 (0.000): Input[0x04]: 0x00380010 -> 0x0b2dd4ba
  2.637 (0.000): Input[0x05]: 0x00380014 -> 0x56d45178
  2.637 (0.000): Input[0x06]: 0x00380018 -> 0x3d208dd8
  2.637 (0.000): Input[0x07]: 0x0038001c -> 0x50a4aa15
  2.637 (0.000): Input[0x08]: 0x00380020 -> 0x455db226
  2.637 (0.000): Input[0x09]: 0x00380024 -> 0xb0a79775
  2.637 (0.000): Input[0x0a]: 0x00380028 -> 0x20963f46
  2.637 (0.000): Input[0x0b]: 0x0038002c -> 0x10dd66f6
  2.637 (0.000): Input[0x0c]: 0x00380030 -> 0x73432caa
  2.637 (0.000): Input[0x0d]: 0x00380034 -> 0x7c9605a5
  2.637 (0.000): Input[0x0e]: 0x00380038 -> 0x92708d7c
  2.637 (0.000): Input[0x0f]: 0x0038003c -> 0xce6e2d2a
  2.637 (0.000): Compress
  2.637 (0.000): Input[0x00]: 0x00380040 -> 0x80000000
  2.637 (0.000): Input[0x01]: 0x00380044 -> 0x00000000
  2.637 (0.000): Input[0x02]: 0x00380048 -> 0x00000000
  2.637 (0.000): Input[0x03]: 0x0038004c -> 0x00000000
  2.637 (0.000): Input[0x04]: 0x00380050 -> 0x00000000
  2.637 (0.000): Input[0x05]: 0x00380054 -> 0x00000000
  2.637 (0.000): Input[0x06]: 0x00380058 -> 0x00000000
  2.637 (0.000): Input[0x07]: 0x0038005c -> 0x00000000
  2.637 (0.000): Input[0x08]: 0x00380060 -> 0x00000000
  2.637 (0.000): Input[0x09]: 0x00380064 -> 0x00000000
  2.637 (0.000): Input[0x0a]: 0x00380068 -> 0x00000000
  2.637 (0.000): Input[0x0b]: 0x0038006c -> 0x00000000
  2.637 (0.000): Input[0x0c]: 0x00380070 -> 0x00000000
  2.637 (0.000): Input[0x0d]: 0x00380074 -> 0x00000000
  2.637 (0.000): Input[0x0e]: 0x00380078 -> 0x00000000
  2.637 (0.000): Input[0x0f]: 0x0038007c -> 0x00000200
  2.637 (0.000): Compress
  2.637 (0.000): Output[0x0]: 0x4bac0ce0
  2.637 (0.000): Output[0x1]: 0xb7372f32
  2.637 (0.000): Output[0x2]: 0x19a2e3f2
  2.637 (0.000): Output[0x3]: 0x70bbcd75
  2.637 (0.000): Output[0x4]: 0xd36b424a
  2.637 (0.000): Output[0x5]: 0x6cd22817
  2.637 (0.000): Output[0x6]: 0x59ec7857
  2.637 (0.000): Output[0x7]: 0x58b3e0c9
  2.639 (0.002): size = 8192
  2.800 (0.161): codeGroup: fc7eaa147be8f6675a4ac4a1ea7dd046864574f91d44c32786553937453a31df
  2.801 (0.000): dataGroup: 75b48664786babae55b2889cf70b2451d6c1745c59a447330a471623917e67a9
  2.801 (0.000): size = 8192
  2.801 (0.000): accum_.size() == 81920
  2.804 (0.003): size = 8192, accumSize = 10
  2.804 (0.000): getAccum.size() = 81920
  2.821 (0.016): accumGroup: 142e61fec5b4e59774d6a50ed1ee0932bb0bd94cf3c5eb4d50b9cd560f003edb
  3.891 (1.070): checkGroup: 22d63c815ccca3af97c61da7abe6d13d8eb994b2eb232a79f11b3dd69fd1b4f3
  3.892 (0.000): Z = 661694271+1446037663x+611163629x^2+866295057x^3
  3.983 (0.091): Size of U = 756
  3.983 (0.000): Mix = 90110368+1711585956x+1479181214x^2+1501516345x^3
  4.022 (0.038): FRI-proof, size = 8192
  4.022 (0.000): Doing FRI folding
  4.026 (0.004): Doing FRI folding
  4.027 (0.000): Doing Queries
  4.027 (0.000): Proof size = 40398
  4.027 (0.000): Reading code id from circuit/submit.id
  4.027 (0.000): size = 8192
  4.027 (0.000): codeRoot = fc7eaa147be8f6675a4ac4a1ea7dd046864574f91d44c32786553937453a31df
  4.028 (0.000): dataRoot = 75b48664786babae55b2889cf70b2451d6c1745c59a447330a471623917e67a9
  4.028 (0.000): accumRoot = 142e61fec5b4e59774d6a50ed1ee0932bb0bd94cf3c5eb4d50b9cd560f003edb
  4.028 (0.000): checkRoot = 22d63c815ccca3af97c61da7abe6d13d8eb994b2eb232a79f11b3dd69fd1b4f3
  4.028 (0.000): Z = 661694271+1446037663x+611163629x^2+866295057x^3
  4.029 (0.000): Result = 1028690186+1089368354x+1199572163x^2+666290509x^3
  4.029 (0.000): Check = 1028690186+1089368354x+1199572163x^2+666290509x^3
  4.029 (0.000): mix = 90110368+1711585956x+1479181214x^2+1501516345x^3
  4.029 (0.000): FRI-verify, size = 8192
msg1: *main._Ctype_struct_SubmitCounterMessage, 8
msg2: *main._Ctype_struct_SubmitCounterMessage, 8
  4.035 (0.006): Reading code id from circuit/submit.id
  4.035 (0.000): size = 8192
  4.035 (0.000): codeRoot = fc7eaa147be8f6675a4ac4a1ea7dd046864574f91d44c32786553937453a31df
  4.035 (0.000): dataRoot = a6c27be9d612b5c2052dc0d366468e7da6aac30219c48ca463758ce44ecd8486
  4.035 (0.000): accumRoot = 4c6d40ce3aee508b3218ee4eb3204e882212d08ee740f25879ef70cbbb7d0ef0
  4.035 (0.000): checkRoot = 752ba286c1d0cf68661462d07f600b91b19fc4fde05a8c695dba398e9e39241c
  4.035 (0.000): Z = 1381264305+1226256679x+702809997x^2+1038276949x^3
  4.036 (0.000): Result = 726697568+1624083136x+1592817284x^2+310310658x^3
  4.036 (0.000): Check = 726697568+1624083136x+1592817284x^2+310310658x^3
  4.036 (0.000): mix = 1307919378+1532981940x+369219781x^2+1527377781x^3
  4.036 (0.000): FRI-verify, size = 8192
Msg1 Commit: {"old_state":[3745472920,78196699,1079449901,3292387144,3933702876,1388071308,3892651200,347607321],"new_state":[1739316594,270856447,1309359948,801192901,3134467339,2018628694,3633127485,363504720]}
  4.040 (0.003): Reading code id from circuit/submit.id
  4.040 (0.000): size = 8192
  4.040 (0.000): codeRoot = fc7eaa147be8f6675a4ac4a1ea7dd046864574f91d44c32786553937453a31df
  4.040 (0.000): dataRoot = 75b48664786babae55b2889cf70b2451d6c1745c59a447330a471623917e67a9
  4.040 (0.000): accumRoot = 142e61fec5b4e59774d6a50ed1ee0932bb0bd94cf3c5eb4d50b9cd560f003edb
  4.040 (0.000): checkRoot = 22d63c815ccca3af97c61da7abe6d13d8eb994b2eb232a79f11b3dd69fd1b4f3
  4.040 (0.000): Z = 661694271+1446037663x+611163629x^2+866295057x^3
  4.041 (0.000): Result = 1028690186+1089368354x+1199572163x^2+666290509x^3
  4.041 (0.000): Check = 1028690186+1089368354x+1199572163x^2+666290509x^3
  4.041 (0.000): mix = 90110368+1711585956x+1479181214x^2+1501516345x^3
  4.041 (0.000): FRI-verify, size = 8192
Msg2 Commit: {"old_state":[1739316594,270856447,1309359948,801192901,3134467339,2018628694,3633127485,363504720],"new_state":[649223493,1972873136,1178572320,4133936400,2855027571,2768606844,2089644178,707620558]}
