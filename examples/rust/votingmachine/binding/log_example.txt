[2022-05-17T11:31:17Z TRACE votinglib] init_stuff() trace level message
[2022-05-17T11:31:17Z DEBUG votinglib] init_stuff() debug level message
[2022-05-17T11:31:17Z INFO  votinglib] init_stuff() info level message
[2022-05-17T11:31:17Z WARN  votinglib] init_stuff() warn level message
[2022-05-17T11:31:17Z ERROR votinglib] init_stuff() error level message
Hello John Smith!
[2022-05-17T11:31:17Z INFO  votinglib] init
  0.000 (0.000): Prover::writeInput> size: 12
  0.000 (0.000):   write_word: 0x00000001
  0.000 (0.000):   write_word: 0x00000000
  0.000 (0.000):   write_word: 0x00000000
  0.000 (0.000): image.size() = 3293
  0.000 (0.000): numSteps = 4096
  0.000 (0.000): Prover::onInit>
  0.000 (0.000):   0x00180000: 0x00000001
  0.000 (0.000):   0x00180004: 0x00000000
  0.000 (0.000):   0x00180008: 0x00000000
  0.006 (0.006): EXPANDING!
  0.013 (0.006): MemoryHandler::onWrite> GPIO_SHA
  0.013 (0.000): SHA256 type: 0, count: 1, idx: 0, source: 0x00080000, digest: 0x00080040
  0.013 (0.000): Input[0x00]: 0x00080000 -> 0x01000000
  0.013 (0.000): Input[0x01]: 0x00080004 -> 0x00000000
  0.013 (0.000): Input[0x02]: 0x00080008 -> 0x00000000
  0.013 (0.000): Input[0x03]: 0x0008000c -> 0x80000000
  0.013 (0.000): Input[0x04]: 0x00080010 -> 0x00000000
  0.013 (0.000): Input[0x05]: 0x00080014 -> 0x00000000
  0.013 (0.000): Input[0x06]: 0x00080018 -> 0x00000000
  0.013 (0.000): Input[0x07]: 0x0008001c -> 0x00000000
  0.013 (0.000): Input[0x08]: 0x00080020 -> 0x00000000
  0.013 (0.000): Input[0x09]: 0x00080024 -> 0x00000000
  0.013 (0.000): Input[0x0a]: 0x00080028 -> 0x00000000
  0.014 (0.000): Input[0x0b]: 0x0008002c -> 0x00000000
  0.014 (0.000): Input[0x0c]: 0x00080030 -> 0x00000000
  0.014 (0.000): Input[0x0d]: 0x00080034 -> 0x00000000
  0.014 (0.000): Input[0x0e]: 0x00080038 -> 0x00000000
  0.014 (0.000): Input[0x0f]: 0x0008003c -> 0x00000060
  0.014 (0.000): Compress
  0.014 (0.000): Output[0x0]: 0xca888f40
  0.014 (0.000): Output[0x1]: 0xc3caca80
  0.014 (0.000): Output[0x2]: 0x5b37a543
  0.014 (0.000): Output[0x3]: 0x4c75de55
  0.014 (0.000): Output[0x4]: 0x50616e07
  0.014 (0.000): Output[0x5]: 0x95e7602f
  0.014 (0.000): Output[0x6]: 0xb91156f2
  0.014 (0.000): Output[0x7]: 0x2dd90851
  0.019 (0.004): MemoryHandler::onWrite> GPIO_Write
  0.019 (0.000): IoHandler::onWrite> 40
  0.019 (0.000): MemoryHandler::onWrite> GPIO_Commit
  0.019 (0.000): IoHandler::onCommit> 40
  0.021 (0.001): MemoryHandler::onWrite> GPIO_SHA
  0.021 (0.000): SHA256 type: 0, count: 1, idx: 0, source: 0x00380000, digest: 0x00040038
  0.021 (0.000): Input[0x00]: 0x00380000 -> 0x01000000
  0.021 (0.000): Input[0x01]: 0x00380004 -> 0x00000000
  0.021 (0.000): Input[0x02]: 0x00380008 -> 0x408f88ca
  0.021 (0.000): Input[0x03]: 0x0038000c -> 0x80cacac3
  0.021 (0.000): Input[0x04]: 0x00380010 -> 0x43a5375b
  0.021 (0.000): Input[0x05]: 0x00380014 -> 0x55de754c
  0.021 (0.000): Input[0x06]: 0x00380018 -> 0x076e6150
  0.021 (0.000): Input[0x07]: 0x0038001c -> 0x2f60e795
  0.021 (0.000): Input[0x08]: 0x00380020 -> 0xf25611b9
  0.021 (0.000): Input[0x09]: 0x00380024 -> 0x5108d92d
  0.021 (0.000): Input[0x0a]: 0x00380028 -> 0x80000000
  0.021 (0.000): Input[0x0b]: 0x0038002c -> 0x00000000
  0.021 (0.000): Input[0x0c]: 0x00380030 -> 0x00000000
  0.021 (0.000): Input[0x0d]: 0x00380034 -> 0x00000000
  0.021 (0.000): Input[0x0e]: 0x00380038 -> 0x00000000
  0.021 (0.000): Input[0x0f]: 0x0038003c -> 0x00000140
  0.021 (0.000): Compress
  0.021 (0.000): Output[0x0]: 0x30316dfa
  0.021 (0.000): Output[0x1]: 0x0597ec52
  0.021 (0.000): Output[0x2]: 0x24d7df43
  0.021 (0.000): Output[0x3]: 0x9be60f4a
  0.021 (0.000): Output[0x4]: 0x600fb8f6
  0.021 (0.000): Output[0x5]: 0xad8e7300
  0.021 (0.000): Output[0x6]: 0x49444c1b
  0.021 (0.000): Output[0x7]: 0x5f01ac47
  0.024 (0.002): size = 8192
  0.030 (0.006): Opening CPU
  0.166 (0.136): codeGroup: 05a684009994b2a63518317d3adf25e8e39012df57ef1c07e650463dcd051ef6
  0.167 (0.000): dataGroup: d5eed2e9d2c168aec87ff6fd63f32d815cc4cf7c21af1f3b16ad12d7476ddfe3
  0.167 (0.000): size = 8192
  0.167 (0.000): accum_.size() == 81920
  0.170 (0.003): size = 8192, accumSize = 10
  0.170 (0.000): getAccum.size() = 81920
  0.185 (0.014): accumGroup: 295fc0fe0f56b23ddd59f12fee91700e68c48229f0dc039c55e65fc6f074cd3c
  1.160 (0.975): checkGroup: 0cc3a661e43ceabc5007845a479002c9089176d9006d959e895c03bec1761151
  1.160 (0.000): Z = 1453276998+1318422032x+352804962x^2+503142923x^3
  1.241 (0.080): Size of U = 756
  1.241 (0.000): Mix = 1516116869+1158083442x+1108118589x^2+330664064x^3
  1.275 (0.033): FRI-proof, size = 8192
  1.275 (0.000): Doing FRI folding
  1.278 (0.003): Doing FRI folding
  1.279 (0.000): Doing Queries
  1.279 (0.000): Proof size = 40398
  1.282 (0.002): Reading code id from circuit/init.id
  1.282 (0.000): size = 8192
  1.282 (0.000): codeRoot = 05a684009994b2a63518317d3adf25e8e39012df57ef1c07e650463dcd051ef6
  1.282 (0.000): dataRoot = d5eed2e9d2c168aec87ff6fd63f32d815cc4cf7c21af1f3b16ad12d7476ddfe3
  1.282 (0.000): accumRoot = 295fc0fe0f56b23ddd59f12fee91700e68c48229f0dc039c55e65fc6f074cd3c
  1.282 (0.000): checkRoot = 0cc3a661e43ceabc5007845a479002c9089176d9006d959e895c03bec1761151
  1.282 (0.000): Z = 1453276998+1318422032x+352804962x^2+503142923x^3
  1.283 (0.000): Result = 1502093441+2390475x+1720770541x^2+1251912112x^3
  1.283 (0.000): Check = 1502093441+2390475x+1720770541x^2+1251912112x^3
  1.283 (0.000): mix = 1516116869+1158083442x+1108118589x^2+330664064x^3
  1.283 (0.000): FRI-verify, size = 8192
  1.287 (0.003): Reading code id from circuit/init.id
  1.287 (0.000): size = 8192
  1.287 (0.000): codeRoot = 05a684009994b2a63518317d3adf25e8e39012df57ef1c07e650463dcd051ef6
  1.287 (0.000): dataRoot = d5eed2e9d2c168aec87ff6fd63f32d815cc4cf7c21af1f3b16ad12d7476ddfe3
  1.287 (0.000): accumRoot = 295fc0fe0f56b23ddd59f12fee91700e68c48229f0dc039c55e65fc6f074cd3c
  1.287 (0.000): checkRoot = 0cc3a661e43ceabc5007845a479002c9089176d9006d959e895c03bec1761151
  1.287 (0.000): Z = 1453276998+1318422032x+352804962x^2+503142923x^3
  1.288 (0.000): Result = 1502093441+2390475x+1720770541x^2+1251912112x^3
  1.288 (0.000): Check = 1502093441+2390475x+1720770541x^2+1251912112x^3
  1.288 (0.000): mix = 1516116869+1158083442x+1108118589x^2+330664064x^3
  1.288 (0.000): FRI-verify, size = 8192
Init State: {"polls_open":true,"voter_bitfield":0,"state":[3397947200,3284847232,1530373443,1282793045,1348562439,2514968623,3104921330,769198161]}
[2022-05-17T11:31:19Z INFO  votinglib] submit: Ballot { voter: 0, vote_yes: true }
  1.291 (0.003): Prover::writeInput> size: 20
  1.291 (0.000):   write_word: 0x00000001
  1.291 (0.000):   write_word: 0x00000000
  1.291 (0.000):   write_word: 0x00000000
  1.291 (0.000):   write_word: 0x00000000
  1.291 (0.000):   write_word: 0x00000001
  1.291 (0.000): image.size() = 3665
  1.291 (0.000): numSteps = 4096
  1.291 (0.000): Prover::onInit>
  1.291 (0.000):   0x00180000: 0x00000001
  1.291 (0.000):   0x00180004: 0x00000000
  1.291 (0.000):   0x00180008: 0x00000000
  1.291 (0.000):   0x0018000c: 0x00000000
  1.291 (0.000):   0x00180010: 0x00000001
  1.296 (0.004): EXPANDING!
  1.305 (0.008): MemoryHandler::onWrite> GPIO_Write
  1.305 (0.000): IoHandler::onWrite> 20
  1.311 (0.006): MemoryHandler::onWrite> GPIO_SHA
  1.311 (0.000): SHA256 type: 0, count: 1, idx: 0, source: 0x00080000, digest: 0x00080040
  1.311 (0.000): Input[0x00]: 0x00080000 -> 0x01000000
  1.311 (0.000): Input[0x01]: 0x00080004 -> 0x00000000
  1.311 (0.000): Input[0x02]: 0x00080008 -> 0x00000000
  1.311 (0.000): Input[0x03]: 0x0008000c -> 0x80000000
  1.311 (0.000): Input[0x04]: 0x00080010 -> 0x00000000
  1.311 (0.000): Input[0x05]: 0x00080014 -> 0x00000000
  1.311 (0.000): Input[0x06]: 0x00080018 -> 0x00000000
  1.311 (0.000): Input[0x07]: 0x0008001c -> 0x00000000
  1.311 (0.000): Input[0x08]: 0x00080020 -> 0x00000000
  1.311 (0.000): Input[0x09]: 0x00080024 -> 0x00000000
  1.311 (0.000): Input[0x0a]: 0x00080028 -> 0x00000000
  1.311 (0.000): Input[0x0b]: 0x0008002c -> 0x00000000
  1.311 (0.000): Input[0x0c]: 0x00080030 -> 0x00000000
  1.311 (0.000): Input[0x0d]: 0x00080034 -> 0x00000000
  1.311 (0.000): Input[0x0e]: 0x00080038 -> 0x00000000
  1.311 (0.000): Input[0x0f]: 0x0008003c -> 0x00000060
  1.312 (0.000): Compress
  1.312 (0.000): Output[0x0]: 0xca888f40
  1.312 (0.000): Output[0x1]: 0xc3caca80
  1.312 (0.000): Output[0x2]: 0x5b37a543
  1.312 (0.000): Output[0x3]: 0x4c75de55
  1.312 (0.000): Output[0x4]: 0x50616e07
  1.312 (0.000): Output[0x5]: 0x95e7602f
  1.312 (0.000): Output[0x6]: 0xb91156f2
  1.312 (0.000): Output[0x7]: 0x2dd90851
  1.319 (0.007): MemoryHandler::onWrite> GPIO_SHA
  1.319 (0.000): SHA256 type: 0, count: 1, idx: 0, source: 0x00080060, digest: 0x000800a0
  1.319 (0.000): Input[0x00]: 0x00080060 -> 0x01000000
  1.319 (0.000): Input[0x01]: 0x00080064 -> 0x01000000
  1.319 (0.000): Input[0x02]: 0x00080068 -> 0x01000000
  1.319 (0.000): Input[0x03]: 0x0008006c -> 0x80000000
  1.319 (0.000): Input[0x04]: 0x00080070 -> 0x00000000
  1.319 (0.000): Input[0x05]: 0x00080074 -> 0x00000000
  1.319 (0.000): Input[0x06]: 0x00080078 -> 0x00000000
  1.319 (0.000): Input[0x07]: 0x0008007c -> 0x00000000
  1.319 (0.000): Input[0x08]: 0x00080080 -> 0x00000000
  1.319 (0.000): Input[0x09]: 0x00080084 -> 0x00000000
  1.319 (0.000): Input[0x0a]: 0x00080088 -> 0x00000000
  1.319 (0.000): Input[0x0b]: 0x0008008c -> 0x00000000
  1.319 (0.000): Input[0x0c]: 0x00080090 -> 0x00000000
  1.319 (0.000): Input[0x0d]: 0x00080094 -> 0x00000000
  1.319 (0.000): Input[0x0e]: 0x00080098 -> 0x00000000
  1.319 (0.000): Input[0x0f]: 0x0008009c -> 0x00000060
  1.319 (0.000): Compress
  1.319 (0.000): Output[0x0]: 0x11047585
  1.319 (0.000): Output[0x1]: 0xfe102fbb
  1.319 (0.000): Output[0x2]: 0x5cadb424
  1.319 (0.000): Output[0x3]: 0x46612a57
  1.319 (0.000): Output[0x4]: 0x8d88c6ef
  1.319 (0.000): Output[0x5]: 0x5ed076bb
  1.319 (0.000): Output[0x6]: 0x7ac360c4
  1.319 (0.000): Output[0x7]: 0xf9e4373d
  1.326 (0.006): EXPANDING!
  1.338 (0.011): MemoryHandler::onWrite> GPIO_Write
  1.338 (0.000): IoHandler::onWrite> 84
  1.339 (0.001): MemoryHandler::onWrite> GPIO_Commit
  1.339 (0.000): IoHandler::onCommit> 84
  1.342 (0.002): MemoryHandler::onWrite> GPIO_SHA
  1.342 (0.000): SHA256 type: 0, count: 2, idx: 0, source: 0x00380000, digest: 0x00040038
  1.342 (0.000): Input[0x00]: 0x00380000 -> 0x408f88ca
  1.342 (0.000): Input[0x01]: 0x00380004 -> 0x80cacac3
  1.342 (0.000): Input[0x02]: 0x00380008 -> 0x43a5375b
  1.342 (0.000): Input[0x03]: 0x0038000c -> 0x55de754c
  1.342 (0.000): Input[0x04]: 0x00380010 -> 0x076e6150
  1.342 (0.000): Input[0x05]: 0x00380014 -> 0x2f60e795
  1.342 (0.000): Input[0x06]: 0x00380018 -> 0xf25611b9
  1.342 (0.000): Input[0x07]: 0x0038001c -> 0x5108d92d
  1.342 (0.000): Input[0x08]: 0x00380020 -> 0x85750411
  1.342 (0.000): Input[0x09]: 0x00380024 -> 0xbb2f10fe
  1.342 (0.000): Input[0x0a]: 0x00380028 -> 0x24b4ad5c
  1.342 (0.000): Input[0x0b]: 0x0038002c -> 0x572a6146
  1.342 (0.000): Input[0x0c]: 0x00380030 -> 0xefc6888d
  1.342 (0.000): Input[0x0d]: 0x00380034 -> 0xbb76d05e
  1.342 (0.000): Input[0x0e]: 0x00380038 -> 0xc460c37a
  1.342 (0.000): Input[0x0f]: 0x0038003c -> 0x3d37e4f9
  1.342 (0.000): Compress
  1.342 (0.000): Input[0x00]: 0x00380040 -> 0x01000000
  1.342 (0.000): Input[0x01]: 0x00380044 -> 0x01000000
  1.342 (0.000): Input[0x02]: 0x00380048 -> 0x00000000
  1.342 (0.000): Input[0x03]: 0x0038004c -> 0x01000000
  1.342 (0.000): Input[0x04]: 0x00380050 -> 0x01000000
  1.342 (0.000): Input[0x05]: 0x00380054 -> 0x80000000
  1.342 (0.000): Input[0x06]: 0x00380058 -> 0x00000000
  1.342 (0.000): Input[0x07]: 0x0038005c -> 0x00000000
  1.342 (0.000): Input[0x08]: 0x00380060 -> 0x00000000
  1.342 (0.000): Input[0x09]: 0x00380064 -> 0x00000000
  1.342 (0.000): Input[0x0a]: 0x00380068 -> 0x00000000
  1.342 (0.000): Input[0x0b]: 0x0038006c -> 0x00000000
  1.342 (0.000): Input[0x0c]: 0x00380070 -> 0x00000000
  1.343 (0.000): Input[0x0d]: 0x00380074 -> 0x00000000
  1.343 (0.000): Input[0x0e]: 0x00380078 -> 0x00000000
  1.343 (0.000): Input[0x0f]: 0x0038007c -> 0x000002a0
  1.343 (0.000): Compress
  1.343 (0.000): Output[0x0]: 0x6c4ea02a
  1.343 (0.000): Output[0x1]: 0x37164532
  1.343 (0.000): Output[0x2]: 0x215440e3
  1.343 (0.000): Output[0x3]: 0x1196f562
  1.343 (0.000): Output[0x4]: 0x23c91e6e
  1.343 (0.000): Output[0x5]: 0x9ba6c418
  1.343 (0.000): Output[0x6]: 0x2a6d81cf
  1.343 (0.000): Output[0x7]: 0x54399030
  1.354 (0.011): size = 16384
  1.693 (0.338): codeGroup: 97a5c129e70585d311bd3136b67c71cfe03778f5b67fa868432a191079d8ad12
  1.693 (0.000): dataGroup: eca84ef3f72ff5e2e624c31cc21e41f80ed8ab4c120fb5940851d804d46b827e
  1.693 (0.000): size = 16384
  1.693 (0.000): accum_.size() == 163840
  1.700 (0.007): size = 16384, accumSize = 10
  1.700 (0.000): getAccum.size() = 163840
  1.732 (0.031): accumGroup: 71bf4b915774b43e38078f69bd7c4fbf2bb12317c15f89f728360006e8cfbdf7
  3.441 (1.708): checkGroup: dd2dd1d9680cb541c7918a775f89f23c5e7f37f16ec949c6934dcc1c1b6bf972
  3.441 (0.000): Z = 1267797905+1525435402x+1719069119x^2+1134272400x^3
  3.596 (0.154): Size of U = 756
  3.596 (0.000): Mix = 511045223+220311310x+492314375x^2+1708918960x^3
  3.670 (0.074): FRI-proof, size = 16384
  3.670 (0.000): Doing FRI folding
  3.679 (0.008): Doing FRI folding
  3.679 (0.000): Doing Queries
  3.680 (0.000): Proof size = 42926
  3.682 (0.002): Reading code id from circuit/submit.id
  3.682 (0.000): size = 16384
  3.682 (0.000): codeRoot = 97a5c129e70585d311bd3136b67c71cfe03778f5b67fa868432a191079d8ad12
  3.682 (0.000): dataRoot = eca84ef3f72ff5e2e624c31cc21e41f80ed8ab4c120fb5940851d804d46b827e
  3.682 (0.000): accumRoot = 71bf4b915774b43e38078f69bd7c4fbf2bb12317c15f89f728360006e8cfbdf7
  3.683 (0.000): checkRoot = dd2dd1d9680cb541c7918a775f89f23c5e7f37f16ec949c6934dcc1c1b6bf972
  3.683 (0.000): Z = 1267797905+1525435402x+1719069119x^2+1134272400x^3
  3.683 (0.000): Result = 1463059777+1517239086x+1823311890x^2+818188724x^3
  3.683 (0.000): Check = 1463059777+1517239086x+1823311890x^2+818188724x^3
  3.683 (0.000): mix = 511045223+220311310x+492314375x^2+1708918960x^3
  3.683 (0.000): FRI-verify, size = 16384
  3.690 (0.006): Reading code id from circuit/submit.id
  3.690 (0.000): size = 16384
  3.691 (0.000): codeRoot = 97a5c129e70585d311bd3136b67c71cfe03778f5b67fa868432a191079d8ad12
  3.691 (0.000): dataRoot = eca84ef3f72ff5e2e624c31cc21e41f80ed8ab4c120fb5940851d804d46b827e
  3.691 (0.000): accumRoot = 71bf4b915774b43e38078f69bd7c4fbf2bb12317c15f89f728360006e8cfbdf7
  3.691 (0.000): checkRoot = dd2dd1d9680cb541c7918a775f89f23c5e7f37f16ec949c6934dcc1c1b6bf972
  3.691 (0.000): Z = 1267797905+1525435402x+1719069119x^2+1134272400x^3
  3.691 (0.000): Result = 1463059777+1517239086x+1823311890x^2+818188724x^3
  3.691 (0.000): Check = 1463059777+1517239086x+1823311890x^2+818188724x^3
  3.691 (0.000): mix = 511045223+220311310x+492314375x^2+1708918960x^3
  3.692 (0.000): FRI-verify, size = 16384
Commit: {"old_state":[3397947200,3284847232,1530373443,1282793045,1348562439,2514968623,3104921330,769198161],"new_state":[285504901,4262473659,1554887716,1180772951,2374551279,1590720187,2059624644,4192483133],"polls_open":true,"voter_bitfield":1,"voter":0,"vote_yes":true,"vote_counted":true}
